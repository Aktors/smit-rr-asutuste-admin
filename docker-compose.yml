services:
  api:
    container_name: api
    build:
      context: ./core
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:8080
      - RABBITMQ_HOSTNAME=mq
      - RABBITMQ_PORT=5672
      - RABBITMQ_USERNAME=guest
      - RABBITMQ_PASSWORD=guest
      - APP_USE_TEST_DATA=true
    depends_on:
      - db
      - mq

  web-ui:
    container_name: web-ui
    build:
      context: ./webapp
      dockerfile: Dockerfile
    ports:
      - "4200:4200"
    depends_on:
      - api
    environment:
      - API_URL=http://api:8080

  mq:
    image: rabbitmq:4.0-management
    container_name: mq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    expose:
      - "5672"
      - "15672"

  db:
    image: postgres:15
    container_name: db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: asutused
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 10s
      timeout: 5s
      retries: 5